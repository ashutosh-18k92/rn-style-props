const palette = [
  "#222222",
  "#222255",
  "#222288",
  "#2222bb",
  "#2222ee",
  "#2222ff",
  "#225522",
  "#225555",
  "#225588",
  "#2255bb",
  "#2255ee",
  "#2255ff",
  "#228822",
  "#228855",
  "#228888",
  "#2288bb",
  "#2288ee",
  "#2288ff",
  "#22bb22",
  "#22bb55",
  "#22bb88",
  "#22bbbb",
  "#22bbee",
  "#22bbff",
  "#22ee22",
  "#22ee55",
  "#22ee88",
  "#22eebb",
  "#22eeee",
  "#22eeff",
  "#22ff22",
  "#22ff55",
  "#22ff88",
  "#22ffbb",
  "#22ffee",
  "#22ffff",
  "#552222",
  "#552255",
  "#552288",
  "#5522bb",
  "#5522ee",
  "#5522ff",
  "#555522",
  "#555555",
  "#555588",
  "#5555bb",
  "#5555ee",
  "#5555ff",
  "#558822",
  "#558855",
  "#558888",
  "#5588bb",
  "#5588ee",
  "#5588ff",
  "#55bb22",
  "#55bb55",
  "#55bb88",
  "#55bbbb",
  "#55bbee",
  "#55bbff",
  "#55ee22",
  "#55ee55",
  "#55ee88",
  "#55eebb",
  "#55eeee",
  "#55eeff",
  "#55ff22",
  "#55ff55",
  "#55ff88",
  "#55ffbb",
  "#55ffee",
  "#55ffff",
  "#882222",
  "#882255",
  "#882288",
  "#8822bb",
  "#8822ee",
  "#8822ff",
  "#885522",
  "#885555",
  "#885588",
  "#8855bb",
  "#8855ee",
  "#8855ff",
  "#888822",
  "#888855",
  "#888888",
  "#8888bb",
  "#8888ee",
  "#8888ff",
  "#88bb22",
  "#88bb55",
  "#88bb88",
  "#88bbbb",
  "#88bbee",
  "#88bbff",
  "#88ee22",
  "#88ee55",
  "#88ee88",
  "#88eebb",
  "#88eeee",
  "#88eeff",
  "#88ff22",
  "#88ff55",
  "#88ff88",
  "#88ffbb",
  "#88ffee",
  "#88ffff",
  "#bb2222",
  "#bb2255",
  "#bb2288",
  "#bb22bb",
  "#bb22ee",
  "#bb22ff",
  "#bb5522",
  "#bb5555",
  "#bb5588",
  "#bb55bb",
  "#bb55ee",
  "#bb55ff",
  "#bb8822",
  "#bb8855",
  "#bb8888",
  "#bb88bb",
  "#bb88ee",
  "#bb88ff",
  "#bbbb22",
  "#bbbb55",
  "#bbbb88",
  "#bbbbbb",
  "#bbbbee",
  "#bbbbff",
  "#bbee22",
  "#bbee55",
  "#bbee88",
  "#bbeebb",
  "#bbeeee",
  "#bbeeff",
  "#bbff22",
  "#bbff55",
  "#bbff88",
  "#bbffbb",
  "#bbffee",
  "#bbffff",
  "#ee2222",
  "#ee2255",
  "#ee2288",
  "#ee22bb",
  "#ee22ee",
  "#ee22ff",
  "#ee5522",
  "#ee5555",
  "#ee5588",
  "#ee55bb",
  "#ee55ee",
  "#ee55ff",
  "#ee8822",
  "#ee8855",
  "#ee8888",
  "#ee88bb",
  "#ee88ee",
  "#ee88ff",
  "#eebb22",
  "#eebb55",
  "#eebb88",
  "#eebbbb",
  "#eebbee",
  "#eebbff",
  "#eeee22",
  "#eeee55",
  "#eeee88",
  "#eeeebb",
  "#eeeeee",
  "#eeeeff",
  "#eeff22",
  "#eeff55",
  "#eeff88",
  "#eeffbb",
  "#eeffee",
  "#eeffff",
  "#ff2222",
  "#ff2255",
  "#ff2288",
  "#ff22bb",
  "#ff22ee",
  "#ff22ff",
  "#ff5522",
  "#ff5555",
  "#ff5588",
  "#ff55bb",
  "#ff55ee",
  "#ff55ff",
  "#ff8822",
  "#ff8855",
  "#ff8888",
  "#ff88bb",
  "#ff88ee",
  "#ff88ff",
  "#ffbb22",
  "#ffbb55",
  "#ffbb88",
  "#ffbbbb",
  "#ffbbee",
  "#ffbbff",
  "#ffee22",
  "#ffee55",
  "#ffee88",
  "#ffeebb",
  "#ffeeee",
  "#ffeeff",
  "#ffff22",
  "#ffff55",
  "#ffff88",
  "#ffffbb",
  "#ffffee",
  "#ffffff",
];

const width = 400;

const gridify = (arr) => {
  let grid = [];
  let iconSize = 50;
  let totalWidth = arr.length * iconSize;

  const chunkSize = Math.floor(totalWidth / width);

  let counter = 0;
  for (let step = 0; step <= arr.length; step += chunkSize) {
    let start = counter * chunkSize;
    let end = Math.min((counter + 1) * chunkSize, arr.length - 1);
    if (end < start) break;
    let chunk = arr.slice(start, end);
    // console.log(start, end);
    // console.log(chunk);
    grid.push(chunk);
    counter++;
  }
  return grid;
};

const transpose = (grid) => {
  let gridTranspose = [];

  const columns = grid[0].length;
  for (let i = 0; i < columns; i++) {
    gridTranspose.push([]);
  }

  const rows = grid.length;
  for (let i = 0; i < rows; i++) {
    for (let j = 0; j < grid[i].length; j++) {
      gridTranspose[j][i] = grid[i][j];
    }
  }

  return gridTranspose
};

const grid = gridify(palette);
console.log(grid[0])
const gridT = transpose(grid);

console.log(gridT[0])